meta:
  zones:
    z1: (( grab terraform_outputs.zone0 ))
    z2: (( grab terraform_outputs.zone1 ))
    z3: (( grab terraform_outputs.zone2 ))

  fog_config:
    provider: AWS
    use_iam_profile: true
    region: (( grab terraform_outputs.region ))

  stemcell: (( grab meta.default_stemcell ))

  default_stemcell:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
    version: 3197
    url: https://bosh.io/d/stemcells/bosh-aws-xen-hvm-ubuntu-trusty-go_agent?v=3197
    sha1: 89a2210b8caf3884855d7db6d48b8863202c7783

properties:

  logger_endpoint:
    port: 443

  loggregator:
    blacklisted_syslog_ranges:
    - start: 10.10.0.0
      end: 10.10.255.255

  cc:
    resource_pool:
      fog_connection: (( grab meta.fog_config ))
    packages:
      fog_connection: (( grab meta.fog_config ))
    droplets:
      fog_connection: (( grab meta.fog_config ))
    buildpacks:
      fog_connection: (( grab meta.fog_config ))

  uaa:
    catalina_opts: -Xmx768m -XX:MaxPermSize=256m

compilation:
  cloud_properties:
    instance_type: c3.large
    availability_zone: (( grab meta.zones.z1 ))

disk_pools:
  - name: database_disks
    disk_size: 1024

resource_pools:
  - name: small_z1
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10_240
        type: gp2
      availability_zone: (( grab meta.zones.z1 ))

  - name: small_z2
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10_240
        type: gp2
      availability_zone: (( grab meta.zones.z2 ))

  - name: small_z3
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10_240
        type: gp2
      availability_zone: (( grab meta.zones.z3 ))

  - name: medium_z1
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10_240
        type: gp2
      availability_zone: (( grab meta.zones.z1 ))

  - name: medium_z2
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10_240
        type: gp2
      availability_zone: (( grab meta.zones.z2 ))

  - name: medium_z3
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10_240
        type: gp2
      availability_zone: (( grab meta.zones.z3 ))

  - name: large_z1
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 65_536
        type: gp2
      availability_zone: (( grab meta.zones.z1 ))

  - name: large_z2
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 65_536
        type: gp2
      availability_zone: (( grab meta.zones.z2 ))

  - name: api_z1
    cloud_properties:
      instance_type: m3.medium
      iam_instance_profile: cf-cloudcontroller
      ephemeral_disk:
        size: 65_536
        type: gp2
      availability_zone: (( grab meta.zones.z1 ))
      security_groups:
        - (( grab terraform_outputs.default_security_group ))
        - (( grab terraform_outputs.cc_server_security_group ))

  - name: api_z2
    cloud_properties:
      instance_type: m3.medium
      iam_instance_profile: cf-cloudcontroller
      ephemeral_disk:
        size: 65_536
        type: gp2
      availability_zone: (( grab meta.zones.z2 ))
      security_groups:
        - (( grab terraform_outputs.default_security_group ))
        - (( grab terraform_outputs.cc_server_security_group ))

  - name: router_z1
    cloud_properties:
      instance_type: c3.large
      ephemeral_disk:
        size: 10_240
        type: gp2
      availability_zone: (( grab meta.zones.z1 ))
      elbs:
        - (( grab terraform_outputs.elb_name ))

  - name: router_z2
    cloud_properties:
      instance_type: c3.large
      ephemeral_disk:
        size: 10_240
        type: gp2
      availability_zone: (( grab meta.zones.z2 ))
      elbs:
        - (( grab terraform_outputs.elb_name ))

  - name: small_errand
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10_240
        type: gp2
      availability_zone: (( grab meta.zones.z1 ))

  - name: xlarge_errand
    cloud_properties:
      instance_type: c3.xlarge
      availability_zone: (( grab meta.zones.z1 ))

# Diego
  - name: access_z1
    cloud_properties:
      instance_type: m3.medium
      availability_zone: (( grab meta.zones.z1 ))
      elbs:
        - (( grab terraform_outputs.ssh_elb_name ))
      security_groups:
        - (( grab terraform_outputs.file_server_security_group))
        - (( grab terraform_outputs.default_security_group ))
        - (( grab terraform_outputs.consul_client_security_group ))

  - name: access_z2
    cloud_properties:
      instance_type: m3.medium
      availability_zone: (( grab meta.zones.z2 ))
      elbs:
        - (( grab terraform_outputs.ssh_elb_name ))
      security_groups:
        - (( grab terraform_outputs.file_server_security_group))
        - (( grab terraform_outputs.default_security_group ))
        - (( grab terraform_outputs.consul_client_security_group ))

  - name: brain_z1
    cloud_properties:
      instance_type: m3.medium
      availability_zone: (( grab meta.zones.z1 ))

  - name: brain_z2
    cloud_properties:
      instance_type: m3.medium
      availability_zone: (( grab meta.zones.z2 ))

  - name: cc_bridge_z1
    cloud_properties:
      instance_type: m3.medium
      availability_zone: (( grab meta.zones.z1 ))

  - name: cc_bridge_z2
    cloud_properties:
      instance_type: m3.medium
      availability_zone: (( grab meta.zones.z2 ))

  - name: cell_z1
    cloud_properties:
      instance_type: r3.xlarge
      availability_zone: (( grab meta.zones.z1 ))

  - name: cell_z2
    cloud_properties:
      instance_type: r3.xlarge
      availability_zone: (( grab meta.zones.z2 ))

  - name: database_z1
    cloud_properties:
      instance_type: m3.large
      availability_zone: (( grab meta.zones.z1 ))

  - name: database_z2
    cloud_properties:
      instance_type: m3.large
      availability_zone: (( grab meta.zones.z2 ))

  - name: route_emitter_z1
    cloud_properties:
      instance_type: m3.medium
      availability_zone: (( grab meta.zones.z1 ))

  - name: route_emitter_z2
    cloud_properties:
      instance_type: m3.medium
      availability_zone: (( grab meta.zones.z2 ))

  - name: colocated_z1
    cloud_properties:
      instance_type: m3.medium
      availability_zone: (( grab meta.zones.z1 ))
      security_groups:
        - (( grab terraform_outputs.file_server_security_group))
        - (( grab terraform_outputs.default_security_group ))
        - (( grab terraform_outputs.consul_client_security_group ))
        - (( grab terraform_outputs.ccuploader_server_security_group ))
        - (( grab terraform_outputs.bbs_server_security_group ))

  - name: colocated_z2
    cloud_properties:
      instance_type: m3.medium
      availability_zone: (( grab meta.zones.z2 ))
      security_groups:
        - (( grab terraform_outputs.file_server_security_group))
        - (( grab terraform_outputs.default_security_group ))
        - (( grab terraform_outputs.consul_client_security_group ))
        - (( grab terraform_outputs.ccuploader_server_security_group ))
        - (( grab terraform_outputs.bbs_server_security_group ))

# set up static IPs
jobs:
  - name: nats_z1
    networks:
      - name: cf1
        static_ips: (( static_ips(1) ))

  - name: nats_z2
    networks:
      - name: cf2
        static_ips: (( static_ips(1) ))

  - name: router_z1
    networks:
      - name: router1
        static_ips: (( static_ips(1, 2 ,3 ,4, 5, 6, 7, 8) ))

  - name: router_z2
    networks:
      - name: router2
        static_ips: (( static_ips(1, 2 ,3 ,4, 5, 6, 7, 8) ))

  - name: postgres_z1
    networks:
      - name: cf1
        static_ips: (( static_ips(7) ))

  - name: loggregator_z1
    networks:
      - name: cf1

  - name: loggregator_z2
    networks:
      - name: cf2

  - name: doppler_z1
    networks:
      - name: cf1

  - name: doppler_z2
    networks:
      - name: cf2

  - name: loggregator_trafficcontroller_z1
    networks:
      - name: cf1

  - name: loggregator_trafficcontroller_z2
    networks:
      - name: cf2

  - name: consul_z1
    networks:
      - name: cf1
        static_ips: (( static_ips(27, 28, 29) ))

  - name: consul_z2
    networks:
      - name: cf2
        static_ips: (( static_ips(27, 28, 29) ))

  - name: consul_z3
    networks:
      - name: cf3
        static_ips: (( static_ips(27, 28, 29) ))

  - name: etcd_z1
    networks:
      - name: cf1
        static_ips: (( static_ips(9) ))

  - name: etcd_z2
    networks:
      - name: cf2
        static_ips: (( static_ips(9) ))

  - name: etcd_z3
    networks:
      - name: cf3
        static_ips: (( static_ips(9) ))
